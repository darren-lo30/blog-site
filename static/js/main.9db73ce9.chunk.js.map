{"version":3,"sources":["components/nav/NavItem.tsx","components/nav/NavBar.tsx","Template.tsx","components/Loader/index.tsx","pages/Feed/PostPreview.tsx","pages/Error/index.tsx","ErrorHandler.tsx","components/Button/index.tsx","pages/Feed/index.tsx","components/forms/Input.tsx","authentication/SignIn.tsx","pages/Profile/index.tsx","assets/preview.png","pages/Landing/index.tsx","components/forms/TextArea.tsx","pages/PostForm/index.tsx","pages/Post/CommentDisplay.tsx","pages/Post/PostCommentInput.tsx","pages/Post/index.tsx","authentication/UserForm.tsx","App.tsx","index.tsx"],"names":["NavLink","tw","span","p","useLocation","pathname","to","NavItem","linkDesc","onClick","ExpandMenuButton","div","NavBar","siteName","navItems","className","aria-controls","aria-expanded","direction","size","map","navItem","Template","children","signedInId","setUser","history","useHistory","signOutHandler","a","axios","post","withCredentials","then","push","Loader","color","PostPreview","_id","author","name","format","Date","datePosted","title","body","Error","statusCode","ErrorStatusContext","createContext","undefined","useErrorStatus","useContext","ErrorHandler","useState","errorStatusCode","setErrorStatusCode","useEffect","listen","contextPayload","useMemo","Provider","value","StyledButton","button","Button","props","Feed","isAdmin","posts","setPosts","get","response","data","status","uniqid","StyledInput","input","StyledLabel","label","Input","SignIn","email","setEmail","password","setPassword","errors","setErrors","clearForm","event","preventDefault","user","msg","validationErrs","errorObj","onSubmit","error","type","onChange","target","required","Profile","id","useParams","username","capitalize","role","published","comments","comment","message","TechListItem","li","Landing","src","sitePreview","alt","icon","faReact","faFontAwesome","faNode","StyledTextArea","textarea","TextArea","PostForm","action","setTitle","setBody","setPublished","createdPost","put","nextChecked","checked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","goBack","CommentDisplay","getPosts","showControls","setShowControls","setMessage","parentModel","parent","parentComment","parentPost","placeholder","autoComplete","PostCommentInput","postId","Post","setPost","UserForm","setName","setUsername","respons","AuthRoute","component","exact","path","render","AdminRoute","App","setSignedInId","setIsAdmin","authDone","setAuthDone","defaults","baseURL","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9db73ce9.chunk.js","sourcesContent":["import tw from 'tailwind-styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MouseEventHandler } from 'react';\n\ntype NavLinkProps = {\n  to: string,\n  onClick?: MouseEventHandler<any>,\n}\n\nconst NavLink = tw.span<NavLinkProps>`\n  bg-gray-900\n  text-white\n  px-3\n  py-2\n  rounded-md\n  text-sm\n  font-medium\n  ${(p) => (useLocation().pathname === p.to ? 'bg-green-300' : 'bg-transparent hover:bg-gray-700 hover:text-white')}\n`;\n\nexport type NavItemProps = NavLinkProps & {\n  linkDesc: string,\n}\n\nconst NavItem = ({ to, linkDesc, onClick = () => {} }: NavItemProps) => (\n  <Link to={to} onClick={(onClick)}>\n    <NavLink to={to}>{linkDesc}</NavLink>\n  </Link>\n);\n\nexport default NavItem;\n","import tw from 'tailwind-styled-components';\nimport Hamburger from 'hamburger-react';\nimport { Link } from 'react-router-dom';\nimport NavItem, { NavItemProps } from './NavItem';\n\nconst ExpandMenuButton = tw.div`\n  sm:hidden\n  inline-flex\n  items-center\n  justify-center\n  m-2 \n  rounded-md\n  text-gray-400\n  hover:text-white\n  hover:bg-gray-700\n  focus:outline-none\n  focus:ring-2\n  focus:ring-inset\n  focus:ring-white\n`;\n\ntype NavBarProps = {\n  siteName: string,\n  navItems: NavItemProps[],\n}\n\nconst NavBar = ({ siteName, navItems }: NavBarProps) => (\n  <nav className=\"bg-gray-900 px-2 sm:px-6 lg:px-8\">\n    <div className=\"relative max-w-7xl ml-auto mr-auto flex items-center justify-between h-16\">\n      <ExpandMenuButton aria-controls=\"mobile-menu\" aria-expanded=\"false\">\n        <Hamburger direction=\"right\" size={20} />\n      </ExpandMenuButton>\n      <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n        <div className=\"flex-shrink-0 flex items-center\">\n          <h1 className=\"text-white font-bold text-lg\">\n            <Link to=\"/\">{ siteName }</Link>\n          </h1>\n        </div>\n        <div className=\"hidden sm:block sm:ml-auto\">\n          <ul className=\"flex space-x-4\">\n            { navItems.map((navItem: NavItemProps) => (\n              <NavItem\n                key={navItem.linkDesc}\n                to={navItem.to}\n                linkDesc={navItem.linkDesc}\n                onClick={navItem.onClick ? navItem.onClick : () => {}}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n);\n\nexport default NavBar;\n","import axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NavBar from './components/nav/NavBar';\n\ntype TemplateProps = {\n  children: React.ReactNode,\n  signedInId: string,\n  setUser: Function,\n}\n\nconst Template = ({ children, signedInId, setUser }: TemplateProps) => {\n  const history = useHistory();\n\n  const signOutHandler = async () => {\n    axios.post('/sign-out', {}, { withCredentials: true }).then(() => {\n      setUser(null);\n      history.push('/');\n    });\n  };\n\n  const navItems = signedInId ? [\n    { to: '/', linkDesc: 'Home' },\n    { to: '/posts', linkDesc: 'Feed' },\n    { to: `/users/${signedInId}`, linkDesc: 'Profile' },\n    { to: '/sign-out', linkDesc: 'Sign Out', onClick: signOutHandler },\n  ] : [\n    { to: '/', linkDesc: 'Home' },\n    { to: '/sign-in', linkDesc: 'Sign In' },\n    { to: '/sign-up', linkDesc: 'Sign Up' },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-stretch bg-gray-900\">\n      <NavBar siteName=\"Console Log\" navItems={navItems} />\n      <div className=\"text-gray-100 container mx-auto mt-6 px-3 flex-1 flex flex-col\">\n        { children }\n      </div>\n    </div>\n  );\n};\n\nexport default Template;\n","import { Ring } from 'react-awesome-spinners';\n\nconst Loader = () => (\n  <div className=\"flex-1 flex justify-center items-center\">\n    <Ring color=\"#6EE7B7\" size=\"64\" />\n  </div>\n);\n\nexport default Loader;\n","import { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\ntype PostDisplayProps = {\n  post: any\n}\n\nconst PostPreview = ({ post }: PostDisplayProps) => (\n  <Link to={`posts/${post._id}`}>\n    <div className=\"bg-gray-700 rounded my-5 pt-3 pb-5 px-4\">\n      <div className=\"mb-2\">\n        <p className=\"font-bold\">{ post.author.name }</p>\n        <p className=\"text-sm text-gray-300\">{ format(new Date(post.datePosted), \" LLLL d, y 'at' h:mm a\") }</p>\n      </div>\n      <h2 className=\"font-bold text-lg underline\">{ post.title }</h2>\n      <p className=\"max-h-16 text-sm overflow-hidden overflow-ellipsis\">{ post.body }</p>\n    </div>\n  </Link>\n);\n\nexport default PostPreview;\n","type ErrorProps = {\n  statusCode: string,\n}\n\nconst Error = ({ statusCode }: ErrorProps) => (\n  <div className=\"container mx-auto w-full text-gray-200\">\n    <h1 className=\"pt-10 text-4xl mb-3\">\n      { ` Error ${statusCode}` }\n    </h1>\n    <p className=\"text-gray-300\">Whatever you are looking for could not be found</p>\n  </div>\n);\n\nexport default Error;\n","import React, {\n  useState, useEffect, createContext, useMemo,\n  useContext,\n} from 'react';\n\nimport { useHistory } from 'react-router-dom';\nimport Error from './pages/Error';\n\ntype ErrorHandlerProps = {\n  children: React.ReactNode;\n};\n\nconst ErrorStatusContext = createContext(undefined as any);\n\nconst ErrorHandler = ({ children }: ErrorHandlerProps) => {\n  const history = useHistory();\n  const [errorStatusCode, setErrorStatusCode] = useState('');\n\n  useEffect(() => {\n    const unlisten = history.listen(() => setErrorStatusCode(''));\n    return unlisten;\n  }, []);\n\n  const renderContent = () => {\n    if (errorStatusCode) {\n      return <Error statusCode={errorStatusCode} />;\n    }\n\n    return children;\n  };\n\n  const contextPayload = useMemo(\n    () => ({ setErrorStatusCode }),\n    [setErrorStatusCode],\n  );\n\n  return (\n    <ErrorStatusContext.Provider value={contextPayload}>\n      {renderContent()}\n    </ErrorStatusContext.Provider>\n  );\n};\n\nconst useErrorStatus = () => useContext(ErrorStatusContext);\n\nexport { useErrorStatus };\nexport default ErrorHandler;\n","import React from 'react';\n\nimport tw from 'tailwind-styled-components';\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n  color?: 'primary' | 'secondary',\n}\n\nconst StyledButton = tw.button`\n  px-4\n  py-1.5\n  text-white\n  ${(p) => (\n    (p.color === 'primary' && 'bg-green-400 hover:bg-green-600')\n    || (p.color === 'secondary' && 'bg-blue-300 hover:bg-blue-500')\n    || ''\n  )}\n  ${(p) => (p.className)}\n  rounded-sm\n`;\n\nexport default function Button({\n  children,\n  ...props\n}: ButtonProps) {\n  return (\n    <StyledButton\n      {...props}\n    >\n      { children }\n    </StyledButton>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport uniqid from 'uniqid';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../components/Loader';\nimport PostPreview from './PostPreview';\n\nimport { useErrorStatus } from '../../ErrorHandler';\nimport Button from '../../components/Button';\n\ntype FeedProps = {\n  isAdmin: boolean\n}\nconst Feed = ({ isAdmin }: FeedProps) => {\n  const { setErrorStatusCode } = useErrorStatus();\n  const [posts, setPosts] = useState<any[]>();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await axios.get('/posts', { withCredentials: true });\n        setPosts(response.data.posts);\n      } catch (error: any) {\n        setErrorStatusCode(error.response.status);\n      }\n    })();\n  }, []);\n\n  if (!posts) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between\">\n        <h1 className=\"text-3xl font-bold\">Feed</h1>\n        <span>\n          { isAdmin ? (\n            <Link to=\"/posts/new\">\n              <Button color=\"primary\">Create Post</Button>\n            </Link>\n          ) : null}\n        </span>\n      </div>\n      { posts.map((post) => (\n        <PostPreview key={uniqid()} post={post} />\n      ))}\n    </div>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\nimport tw from 'tailwind-styled-components';\n\nconst StyledInput = tw.input`\n  shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\n`;\n\nconst StyledLabel = tw.label`\n  block text-sm font-bold text-md mb-2\n`;\n\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement> & {\n  label?: string,\n}\n\nconst Input = ({\n  label = '',\n  ...props\n}: InputProps) => (\n  <div className=\"py-2\">\n    { label ? (\n      <StyledLabel>\n        {label}\n      </StyledLabel>\n    ) : null }\n    <StyledInput\n      {... props}\n    />\n  </div>\n);\n\nexport default Input;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport uniqid from 'uniqid';\nimport Button from '../components/Button';\n\nimport Input from '../components/forms/Input';\n\ntype SignInProps = {\n  setUser: Function,\n}\n\nconst SignIn = ({ setUser }: SignInProps) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState<string[]>([]);\n  const history = useHistory();\n\n  function clearForm() {\n    setEmail('');\n    setPassword('');\n    setErrors([]);\n  }\n\n  async function handleSubmit(event: React.SyntheticEvent) {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post('/sign-in', {\n        email, password,\n      }, { withCredentials: true });\n\n      clearForm();\n      setUser(response.data.user);\n      history.push('/');\n    } catch (error: any) {\n      if (error.response.data.msg) {\n        // Unable to log in due to incorrect login info\n        setErrors([error.response.data.msg]);\n      } else if (error.response.data.validationErrs) {\n        // Post data was invalid\n        setErrors(error.response.data.validationErrs.errors.map((errorObj:any) => errorObj.msg));\n      } else {\n        // Different kind of error occured\n        setErrors(['An error occured']);\n      }\n    }\n  }\n\n  return (\n    <div className=\"w-full flex-1 flex justify-center items-center\">\n      <div className=\"mx-3 w-2/3 md:w-1/2 lg:w-1/3 bg-gray-700 rounded\">\n        <form onSubmit={handleSubmit} className=\"text-white w-full pt-6 px-9 pb-8\">\n          <h1 className=\"text-2xl text-center font-bold mb-5\">Sign In</h1>\n          <ul className=\"mb-3\">\n            { errors.map((error) => (\n              <li key={uniqid()} className=\"text-red-200\">{ error }</li>\n            ))}\n          </ul>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            label=\"Email\"\n            onChange={\n              (event: React.ChangeEvent<HTMLInputElement>) => { setEmail(event.target.value); }\n            }\n            className=\"text-gray-700\"\n            required\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            label=\"Password\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setPassword(event.target.value);\n            }}\n            className=\"text-gray-700\"\n            required\n          />\n          <Button color=\"primary\" type=\"submit\" className=\"rounded w-full my-3\">Sign In</Button>\n        </form>\n      </div>\n    </div>\n\n  );\n};\n\nexport default SignIn;\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport capitalize from 'capitalize';\nimport uniqid from 'uniqid';\nimport Loader from '../../components/Loader';\nimport { useErrorStatus } from '../../ErrorHandler';\nimport Button from '../../components/Button';\n\ntype Params = {\n  id: string,\n}\n\ntype ProfileProps = {\n  signedInId: string,\n}\nconst Profile = ({ signedInId } : ProfileProps) => {\n  const [user, setUser] = useState<any>();\n  const { id } = useParams<Params>();\n  const { setErrorStatusCode } = useErrorStatus();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await axios.get(`/users/${id}`, { withCredentials: true });\n        setUser(response.data.user);\n      } catch (error: any) {\n        setErrorStatusCode(error.response.status);\n      }\n    })();\n  }, []);\n\n  // Display while loading\n  if (!user) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div>\n      <section className=\"py-3\">\n        <h2 className=\"text-3xl inline mr-3\">{ user.name }</h2>\n        <span className=\"text-green-300\">{ `@${user.username}` }</span>\n        <p className=\"text-gray-300 mb-3\">{ user.email }</p>\n        <p className=\"text-gray-300 mb-3\">{ capitalize(user.role) }</p>\n        {signedInId === user._id ? (\n          <Link to={`/users/${user._id}/edit`}>\n            <Button color=\"primary\">Edit Profile</Button>\n          </Link>\n        ) : null}\n      </section>\n\n      {user.role === 'admin' ? (\n        <div>\n          <h2 className=\"text-xl mb-3\">Posts</h2>\n          <ul className=\"sm:w-2/3 lg:w-1/2\">\n            { user.posts.map((post: any) => (\n              <Link to={`/posts/${post._id}`}>\n                <li\n                  className={`text-gray-900 my-3 rounded px-3 py-2 ${post.published ? 'bg-gray-300' : 'bg-yellow-300'}`}\n                  key={uniqid()}\n                >\n                  {post.title}\n                </li>\n              </Link>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n\n      <section className=\"py-3\">\n        <h2 className=\"text-xl\">Comments</h2>\n        <ul className=\"sm:w-2/3 lg:w-1/2\">\n          { user.comments.map((comment: any) => (\n            <li className=\"bg-gray-300 text-gray-900 my-3 rounded px-3 py-2\" key={uniqid()}>{comment.message}</li>\n          ))}\n        </ul>\n\n      </section>\n    </div>\n  );\n};\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/preview.cf7d4c78.png\";","import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact, faFontAwesome, faNode } from '@fortawesome/free-brands-svg-icons';\nimport tw from 'tailwind-styled-components';\nimport sitePreview from '../../assets/preview.png';\nimport Button from '../../components/Button';\n\nconst TechListItem = tw.li`\n  mx-4\n`;\n\ntype LandingProps = {\n  signedInId: string,\n}\n\nexport default function Landing({ signedInId }: LandingProps) {\n  return (\n    <div className=\"flex-auto bg-gray-900 text-white p-3\">\n      <div className=\"container mx-auto mt-6\">\n        <div className=\"flex flex-col md:flex-row items-center content-center justify-center\">\n          <div className=\"flex flex-col text-md items-center content-center justify-center p-3 md:mr-7 mb-4 text-center md:text-left\">\n            <h1 className=\"font-bold text-4xl mb-5\">Welcome to Console Logger</h1>\n            <p>This is a computer science oriented blogging website built in React</p>\n\n            <div className=\"flex w-full justify-center md:justify-start mt-7\">\n              {\n                signedInId ? (\n                  <div>\n                    <Button className=\"mr-3\" color=\"primary\"><Link to=\"/posts\">Feed</Link></Button>\n                  </div>\n                ) : (\n                  <div>\n                    <Button className=\"mr-3\" color=\"primary\"><Link to=\"/sign-up\">Sign Up</Link></Button>\n                    <Button color=\"primary\"><Link to=\"/sign-in\">Sign in</Link></Button>\n                  </div>\n                )\n              }\n            </div>\n          </div>\n          <div className=\"p-5 lg:w-1/2 md:w-2/3\">\n            <img src={sitePreview} alt=\"Site preview\" />\n          </div>\n        </div>\n\n        <div className=\"mt-16 md:mt-48\">\n          <ul className=\"text-6xl flex justify-center\">\n            <TechListItem><FontAwesomeIcon icon={faReact} /></TechListItem>\n            <TechListItem><FontAwesomeIcon icon={faFontAwesome} /></TechListItem>\n            <TechListItem><FontAwesomeIcon icon={faNode} /></TechListItem>\n          </ul>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport tw from 'tailwind-styled-components';\n\nconst StyledTextArea = tw.textarea`\n  shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n`;\n\nconst StyledLabel = tw.label`\n  block text-sm font-bold text-md mb-2\n`;\n\ntype TextAreaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement> & {\n  label?: string,\n}\n\nconst TextArea = ({\n  label = '',\n  ...props\n}: TextAreaProps) => (\n  <div className=\"py-2\">\n    {label ? (\n      <StyledLabel>\n        {label}\n      </StyledLabel>\n    ) : null}\n    <StyledTextArea\n      {...props}\n    />\n  </div>\n);\n\nexport default TextArea;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport uniqid from 'uniqid';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Switch from 'react-switch';\nimport Button from '../../components/Button';\nimport Input from '../../components/forms/Input';\nimport TextArea from '../../components/forms/TextArea';\nimport setErrorStatusCode from '../../ErrorHandler';\n\ntype PostFormProps = {\n  action: 'edit' | 'create',\n  signedInId?: string,\n}\n\ntype Params = {\n  id: string\n}\n\nconst PostForm = ({ action, signedInId }: PostFormProps) => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [published, setPublished] = useState(true);\n  const [errors, setErrors] = useState<string[]>([]);\n  const { id } = useParams<Params>();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      if (id) {\n        try {\n          const response = await axios.get(`/posts/${id}`, { withCredentials: true });\n          const { post } = response.data;\n\n          // Redirect user if they are not the author of the post\n          if (post.author._id !== signedInId) {\n            history.push('/');\n          }\n\n          setTitle(post.title);\n          setBody(post.body);\n          setPublished(post.published);\n        } catch (error: any) {\n          setErrorStatusCode(error.response.status);\n        }\n      }\n    })();\n  }, []);\n\n  const handleSubmit = (event : React.SyntheticEvent) => {\n    event.preventDefault();\n    (async () => {\n      try {\n        if (action === 'create') {\n          // Create post\n          const response = await axios.post('/posts', { title, body, published }, { withCredentials: true });\n          const createdPost = response.data.post;\n          history.push(`/posts/${createdPost._id}`);\n        } else {\n          // Update post\n          await axios.put(`/posts/${id}`, { title, body, published }, { withCredentials: true });\n          history.push(`/posts/${id}`);\n        }\n      } catch (error: any) {\n        if (error.response.data.validationErrs) {\n          // Post data was invalid\n          setErrors(error.response.data.validationErrs.errors.map((errorObj:any) => errorObj.msg));\n        } else {\n          // Different kind of error occured\n          setErrors(['An error occured']);\n        }\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"text-2xl mb-3\">\n          {action === 'create' ? 'Create A Post' : 'Update A Post'}\n        </h1>\n        <ul className=\"mb-3\">\n          { errors.map((error) => (\n            <li key={uniqid()} className=\"text-red-200\">{ error }</li>\n          ))}\n        </ul>\n        <div className=\"pt-4 pb-8\">\n          <Input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            label=\"Title\"\n            onChange={\n              (event) => { setTitle(event.target.value); }\n            }\n            className=\"text-gray-700\"\n          />\n          <TextArea\n            name=\"body\"\n            value={body}\n            label=\"Body\"\n            onChange={\n              (event) => { setBody(event.target.value); }\n            }\n            className=\"h-32\"\n          />\n          <div className=\"flex items-center\">\n            <span className=\"font-bold mr-3\">Published</span>\n            <Switch\n              onChange={(nextChecked) => { setPublished(nextChecked); }}\n              checked={published}\n              onColor=\"#6EE7B7\"\n              onHandleColor=\"#10B981\"\n              handleDiameter={20}\n              uncheckedIcon={false}\n              checkedIcon={false}\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n              height={15}\n              width={48}\n              className=\"react-switch\"\n              id=\"material-switch\"\n            />\n          </div>\n        </div>\n        <Button type=\"submit\" color=\"primary\" className=\"mr-3\">{action === 'create' ? 'Create' : 'Update'}</Button>\n        <Button type=\"button\" color=\"secondary\" onClick={() => { history.goBack(); }}>Cancel</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n","import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport uniqid from 'uniqid';\nimport { format } from 'date-fns';\nimport Button from '../../components/Button';\nimport Input from '../../components/forms/Input';\n\ntype CommentDisplayProps = {\n  comment: any\n  getPosts: Function\n}\nconst CommentDisplay = ({ comment, getPosts }: CommentDisplayProps) => {\n  const [showControls, setShowControls] = useState(false);\n  const [message, setMessage] = useState('');\n  const [errors, setErrors] = useState<string[]>();\n\n  const handleReplySubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    (async () => {\n      try {\n        await axios.post(`/comments/${comment.parentPost}`, { message, parentComment: comment._id }, { withCredentials: true });\n        await getPosts();\n        setMessage('');\n      } catch (error: any) {\n        if (error.response.data.validationErrs) {\n          // Comment data was invalid\n          setErrors(error.response.data.validationErrs.errors.map((errorObj:any) => errorObj.msg));\n        } else {\n          // Different kind of error occured\n          setErrors(['An error occured']);\n        }\n      }\n    })();\n  };\n\n  return (\n    <div className=\"bg-gray-700 my-3 rounded px-3 py-3 w-2/3 md:w-1/2\">\n      <div className=\"flex justify-between\">\n        <Link to={`/users/${comment.author._id}`} className=\"font-bold\">\n          {comment.author.username}\n        </Link>\n        <span className=\"underline\">{comment._id}</span>\n      </div>\n      <p className=\"text-sm text-gray-300\">{ format(new Date(comment.datePosted), 'MM/dd/yy HH:mm:ss') }</p>\n      { comment.parentModel === 'Comment' ? (\n        <p className=\"text-sm text-green-300\">{ comment.parent }</p>\n      ) : null}\n      <p className=\"pt-3\">\n        { comment.parentComment ? (\n          <p className=\"underline text-green-300\">{ `@${comment.parentComment}` }</p>\n        ) : null }\n        { comment.message }\n      </p>\n      <div>\n        <Button type=\"button\" className=\"text-sm mt-2\" onClick={() => { setShowControls(true); }}>\n          REPLY\n        </Button>\n      </div>\n      {\n        errors ? (\n          <ul className=\"mb-3\">\n            { errors.map((error) => (\n              <li key={uniqid()} className=\"text-red-200\">{ error }</li>\n            ))}\n          </ul>\n        ) : null\n      }\n      {\n        showControls ? (\n          <form onSubmit={handleReplySubmit}>\n            <Input\n              type=\"text\"\n              name=\"comment\"\n              value={message}\n              placeholder=\"Reply with something\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setMessage(event.target.value);\n              }}\n              onClick={() => { setShowControls(true); }}\n              className=\"bg-transparent text-gray-200\"\n              required\n              autoComplete=\"off\"\n            />\n            <div className=\"flex justify-end\">\n              <Button type=\"button\" className=\"text-gray-300 mr-3\" onClick={() => { setShowControls(false); }}>\n                CANCEL\n              </Button>\n              <Button type=\"submit\" className=\"text-gray-300 bg-gray-600\">\n                REPLY\n              </Button>\n            </div>\n          </form>\n        ) : null\n      }\n    </div>\n  );\n};\n\nexport default CommentDisplay;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport uniqid from 'uniqid';\nimport Button from '../../components/Button';\nimport Input from '../../components/forms/Input';\n\ntype PostCommentInputProps = {\n  postId: string,\n  getPosts: Function\n}\nconst PostCommentInput = ({ postId, getPosts }: PostCommentInputProps) => {\n  const [message, setMessage] = useState('');\n  const [errors, setErrors] = useState<string[]>([]);\n  const [showControls, setShowControls] = useState(false);\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    (async () => {\n      try {\n        await axios.post(`/comments/${postId}`, { message }, { withCredentials: true });\n        await getPosts();\n\n        setMessage('');\n      } catch (error: any) {\n        if (error.response.data.validationErrs) {\n          // Comment data was invalid\n          setErrors(error.response.data.validationErrs.errors.map((errorObj:any) => errorObj.msg));\n        } else {\n          // Different kind of error occured\n          setErrors(['An error occured']);\n        }\n      }\n    })();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"message\"\n        value={message}\n        placeholder=\"Comment something\"\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          setMessage(event.target.value);\n        }}\n        onClick={() => { setShowControls(true); }}\n        required\n        className=\"text-gray-700\"\n        autoComplete=\"off\"\n      />\n      {\n        errors ? (\n          <ul className=\"mb-3\">\n            { errors.map((error) => (\n              <li key={uniqid()} className=\"text-red-200\">{ error }</li>\n            ))}\n          </ul>\n        ) : null\n      }\n      { showControls ? (\n        <div className=\"flex justify-end\">\n          <Button type=\"button\" className=\"text-gray-300 mr-3\" onClick={() => { setShowControls(false); }}>\n            CANCEL\n          </Button>\n          <Button type=\"submit\" className=\"text-gray-300 bg-gray-600\">\n            COMMENT\n          </Button>\n        </div>\n      ) : null}\n    </form>\n  );\n};\n\nexport default PostCommentInput;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport uniqid from 'uniqid';\nimport Loader from '../../components/Loader';\nimport { useErrorStatus } from '../../ErrorHandler';\nimport CommentDisplay from './CommentDisplay';\nimport PostCommentInput from './PostCommentInput';\nimport Button from '../../components/Button';\n\ntype Params = {\n  id: string\n}\n\ntype PostProps = {\n  signedInId: string\n}\n\nconst Post = ({ signedInId }: PostProps) => {\n  const [post, setPost] = useState<any>();\n  const { id } = useParams<Params>();\n  const { setErrorStatusCode } = useErrorStatus();\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`/posts/${id}`, { withCredentials: true });\n      setPost(response.data.post);\n    } catch (error: any) {\n      setErrorStatusCode(error.response.status);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  if (!post) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <section className=\"bg-gray-700 rounded pt-3 pb-5\">\n        <section className=\"px-4 pb-3\">\n          <h1 className=\"text-3xl\">{ post.title }</h1>\n          <div className=\"mb-6\">\n            <div>\n              <Link to={`/users/${post.author._id}`}>\n                <span>{ post.author.name }</span>\n                <span className=\"ml-3 text-green-300\">{ `@${post.author.username}` }</span>\n              </Link>\n            </div>\n            <p className=\"text-sm text-gray-300\">{ format(new Date(post.datePosted), \" LLLL d, y 'at' h:mm a\") }</p>\n          </div>\n          <p>{ post.body }</p>\n        </section>\n\n        {signedInId === post.author._id ? (\n          <div>\n            <hr className=\"h-0.5 border-gray-400 bg-gray-700\" />\n            <div className=\"py-3 px-3\">\n              <Link to={`/posts/${post._id}/edit`}>\n                <Button color=\"primary\">Edit Post</Button>\n              </Link>\n            </div>\n          </div>\n        ) : null}\n        <hr className=\"h-0.5 border-gray-400 bg-gray-700\" />\n        <section className=\"px-3 pt-3\">\n          <PostCommentInput postId={post._id} getPosts={getPosts} />\n        </section>\n      </section>\n      {\n        post.comments.map(\n          (comment: any) => <CommentDisplay comment={comment} key={uniqid()} getPosts={getPosts} />,\n        )\n      }\n    </div>\n\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport uniqid from 'uniqid';\nimport axios from 'axios';\nimport Button from '../components/Button';\nimport Input from '../components/forms/Input';\nimport setErrorStatusCode from '../ErrorHandler';\n\ntype Params = {\n  id: string,\n}\n\ntype UserFormProps = {\n  action: 'create' | 'edit',\n  setUser: Function,\n  signedInId: string\n}\n\nconst UserForm = ({ action, setUser, signedInId }: UserFormProps) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState<string[]>([]);\n  const history = useHistory();\n  const { id } = useParams<Params>();\n\n  useEffect(() => {\n    (async () => {\n      // This means it is a User edit form\n      if (id) {\n        // Can not edit other users\n        if (id !== signedInId) {\n          history.push('/');\n        }\n\n        try {\n          // Get current user data\n          const response = await axios.get(`/users/${id}`, { withCredentials: true });\n          const { user } = response.data;\n\n          setName(user.name);\n          setEmail(user.email);\n          setUsername(user.username);\n        } catch (error: any) {\n          setErrorStatusCode(error.respons.status);\n        }\n      }\n    })();\n  }, []);\n\n  async function handleSubmit(event: React.SyntheticEvent) {\n    event.preventDefault();\n    try {\n      if (action === 'create') {\n        // Sign up user\n        const response = await axios.post('/sign-up', {\n          name, email, username, password,\n        }, { withCredentials: true });\n\n        setUser(response.data.user);\n\n        // Redirect to home\n        history.push('/');\n      } else {\n        // Update the user\n        const response = await axios.put(`/users/${id}`, {\n          name, email, username, password,\n        }, { withCredentials: true });\n        setUser(response.data.user);\n\n        // Redirect user to their profil\n        history.push(`/users/${id}`);\n      }\n    } catch (error: any) {\n      if (error.response) {\n        setErrors(error.response.data.validationErrs.errors.map((errorObj:any) => errorObj.msg));\n      } else {\n        setErrors(['An error occured']);\n      }\n    }\n  }\n\n  return (\n    <div className=\"w-full flex-1 flex justify-center items-center\">\n      <div className=\"mx-3 w-2/3 md:w-1/2 lg:w-1/3 bg-gray-700 rounded\">\n        <form onSubmit={handleSubmit} className=\"text-white w-full pt-6 px-9 pb-8\">\n          <h1 className=\"text-2xl text-center font-bold mb-5\">{ action === 'create' ? 'Sign Up' : 'Edit Profile' }</h1>\n          <ul className=\"mb-3\">\n            { errors.map((error) => (\n              <li key={uniqid()} className=\"text-red-200\">{ error }</li>\n            ))}\n          </ul>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            label=\"Name\"\n            onChange={\n              (event) => { setName(event.target.value); }\n            }\n            className=\"text-gray-700\"\n            required\n          />\n          <Input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            label=\"Email\"\n            onChange={\n              (event) => { setEmail(event.target.value); }\n            }\n            className=\"text-gray-700\"\n            required\n          />\n          <Input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            label=\"Username\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n            className=\"text-gray-700\"\n            required\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            label=\"Password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            className=\"text-gray-700\"\n            required\n          />\n          <Button type=\"submit\" color=\"primary\" className=\"rounded w-full my-3\">{ action === 'create' ? 'Sign Up' : 'Update' }</Button>\n        </form>\n      </div>\n    </div>\n\n  );\n};\n\nexport default UserForm;\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter, Redirect, Route, Switch,\n} from 'react-router-dom';\nimport axios from 'axios';\nimport Template from './Template';\nimport Feed from './pages/Feed';\nimport SignIn from './authentication/SignIn';\nimport Profile from './pages/Profile';\nimport Landing from './pages/Landing';\nimport ErrorHandler from './ErrorHandler';\nimport Error from './pages/Error';\nimport Loader from './components/Loader';\nimport PostForm from './pages/PostForm';\nimport Post from './pages/Post';\nimport UserForm from './authentication/UserForm';\n\ntype AuthRouteProps = {\n  component: React.ComponentType<any>,\n  exact: boolean,\n  path: string,\n  signedInId: string,\n}\n\n// A route that requires authentication\nconst AuthRoute = ({\n  component, exact, path, signedInId,\n}: AuthRouteProps) => (\n  <Route\n    exact={exact}\n    path={path}\n    render={() => (signedInId ? <Route component={component} /> : <Redirect to={{ pathname: '/sign-in' }} />)}\n  />\n);\n\ntype AdminRouteProps = {\n  component: React.ComponentType<any>,\n  exact: boolean,\n  path: string,\n  isAdmin: boolean,\n}\n\n// A route only accesible to admins\nconst AdminRoute = ({\n  component, exact, path, isAdmin,\n}: AdminRouteProps) => (\n  <Route\n    exact={exact}\n    path={path}\n    render={() => (isAdmin ? <Route component={component} /> : <Redirect to={{ pathname: '/' }} />)}\n  />\n);\n\nconst App = () => {\n  const [signedInId, setSignedInId] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [authDone, setAuthDone] = useState(false);\n\n  const setUser = (user: any) => {\n    if (!user) {\n      setSignedInId('');\n      setIsAdmin(false);\n    } else {\n      setSignedInId(user._id);\n      setIsAdmin(user.role === 'admin');\n    }\n  };\n\n  // Updates if user is logged in or not\n  useEffect(() => {\n    (async () => {\n      const response = await axios.post('/auth', {}, { withCredentials: true });\n\n      // If the user is logged in previously, then change the state to mirror that\n      if (response.data.user) {\n        const { user } = response.data;\n        setUser(user);\n      }\n\n      setAuthDone(true);\n    })();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Template signedInId={signedInId} setUser={setUser}>\n        {authDone ? (\n          <ErrorHandler>\n            <Switch>\n              <Route exact path=\"/\" component={() => <Landing signedInId={signedInId} />} />\n\n              <AuthRoute\n                exact\n                path=\"/posts\"\n                component={() => <Feed isAdmin={isAdmin} />}\n                signedInId={signedInId}\n              />\n              <AdminRoute\n                exact\n                path=\"/posts/new\"\n                component={() => <PostForm action=\"create\" />}\n                isAdmin={isAdmin}\n              />\n              <AuthRoute\n                exact\n                path=\"/posts/:id/edit\"\n                component={() => <PostForm action=\"edit\" signedInId={signedInId} />}\n                signedInId={signedInId}\n              />\n              <AuthRoute\n                exact\n                path=\"/posts/:id\"\n                component={() => <Post signedInId={signedInId} />}\n                signedInId={signedInId}\n              />\n              <AuthRoute\n                exact\n                path=\"/users/:id\"\n                component={() => <Profile signedInId={signedInId} />}\n                signedInId={signedInId}\n              />\n              <AuthRoute\n                exact\n                path=\"/users/:id/edit\"\n                signedInId={signedInId}\n                component={() => <UserForm action=\"edit\" setUser={setUser} signedInId={signedInId} />}\n              />\n\n              {/* Authentication Pages */}\n              { !signedInId ? (\n                <div>\n                  <Route\n                    exact\n                    path=\"/sign-up\"\n                    component={() => <UserForm action=\"create\" setUser={setUser} signedInId={signedInId} />}\n                  />\n\n                  <Route\n                    exact\n                    path=\"/sign-in\"\n                    component={() => <SignIn setUser={setUser} />}\n                  />\n                </div>\n              ) : null}\n              <Route render={() => <Error statusCode=\"404\" />} />\n            </Switch>\n\n          </ErrorHandler>\n        ) : (\n          <Loader />\n        )}\n      </Template>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App';\nimport './assets/styles.css';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL!;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}